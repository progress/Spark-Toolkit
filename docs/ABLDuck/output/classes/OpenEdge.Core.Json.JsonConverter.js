Ext.data.JsonP.OpenEdge_Core_Json_JsonConverter({"files":[],"uses":["Ccs.Common.Support.ICharacterArrayHolder","Ccs.Common.Support.IDateArrayHolder","Ccs.Common.Support.IDateHolder","Ccs.Common.Support.IDateTimeArrayHolder","Ccs.Common.Support.IDateTimeHolder","Ccs.Common.Support.IDateTimeTzArrayHolder","Ccs.Common.Support.IDateTimeTzHolder","Ccs.Common.Support.IDecimalArrayHolder","Ccs.Common.Support.IDecimalHolder","Ccs.Common.Support.IHandleArrayHolder","Ccs.Common.Support.IHandleHolder","Ccs.Common.Support.IInt64ArrayHolder","Ccs.Common.Support.IInt64Holder","Ccs.Common.Support.IIntegerArrayHolder","Ccs.Common.Support.IIntegerHolder","Ccs.Common.Support.ILogicalArrayHolder","Ccs.Common.Support.ILogicalHolder","Ccs.Common.Support.ILongcharArrayHolder","Ccs.Common.Support.ILongcharHolder","Ccs.Common.Support.IMemptrArrayHolder","Ccs.Common.Support.IMemptrHolder","Ccs.Common.Support.IPrimitiveArrayHolder","Ccs.Common.Support.IPrimitiveHolder","Ccs.Common.Support.IRowidArrayHolder","OpenEdge.Core.Assert","OpenEdge.Core.Collections.ICollection","OpenEdge.Core.Collections.IIterator","OpenEdge.Core.Collections.IMap","OpenEdge.Core.Collections.IMapEntry","OpenEdge.Core.DateArrayHolder","OpenEdge.Core.DateHolder","OpenEdge.Core.DateTimeArrayHolder","OpenEdge.Core.DateTimeHolder","OpenEdge.Core.DateTimeTzArrayHolder","OpenEdge.Core.DateTimeTzHolder","OpenEdge.Core.DecimalArrayHolder","OpenEdge.Core.HandleArrayHolder","OpenEdge.Core.IObjectArrayHolder","OpenEdge.Core.IntegerArrayHolder","OpenEdge.Core.Json.IJsonSerializer","OpenEdge.Core.KeyValuePair","OpenEdge.Core.LogicalArrayHolder","OpenEdge.Core.LogicalValue","OpenEdge.Core.LongcharArrayHolder","OpenEdge.Core.MemptrArrayHolder","OpenEdge.Core.ObjectArrayHolder","OpenEdge.Core.RowidArrayHolder","OpenEdge.Core.String","OpenEdge.Core.StringConstant","OpenEdge.Core.TimeStamp","Progress.Json.ObjectModel.JsonArray","Progress.Json.ObjectModel.JsonDataType","Progress.Json.ObjectModel.JsonObject","Progress.Lang.AppError","Progress.Lang.Object","Progress.Lang.LockConflict","Progress.Lang.SoapFaultError","OpenEdge.Core.Json.JsonSerializer","OpenEdge.Core.JsonDataTypeEnum"],"id":"class-OpenEdge.Core.Json.JsonConverter","tagname":"class","name":"OpenEdge.Core.Json.JsonConverter","extends":"","author":"pjudge","comment":"\u003ch3\u003eFile:\u003c/h3\u003e\n\u003cp\u003eJsonConverter\u003c/p\u003e\n\u003ch3\u003eDescription:\u003c/h3\u003e\n\u003cp\u003eHelps to convert to and from JSON, for common/standard (Ccs.Common.Support.I\u003cem\u003eHolder,\nOpenEdge.Core.Collections.I\u003c/em\u003e) types\u003c/p\u003e\n\u003ch3\u003eCreated:\u003c/h3\u003e\n\u003cp\u003e2019-11-21\u003c/p\u003e\n","icon":"class","superclasses":["OpenEdge.Core.Json.JsonConverter"],"subclasses":[],"implements":[],"members":[{"id":"constructor-JsonConverter1","name":"JsonConverter","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"constructor","comment":"\u003cp\u003eDefault constructor.\u003c/p\u003e\n\u003cp\u003eThis is private so that this class cannot be instantiated - it\u0027s intended to be used with static members only\u003c/p\u003e\n","meta":{"private":true}},{"id":"method-ToArray","name":"ToArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an array of objects into into a JSONArray\u003c/p\u003e\n\u003cp\u003eInvalid inputs, indeterminate arrays, all get a null value\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"OpenEdge.Core.IObjectArrayHolder","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonArray","comment":"JsonArray An array instance"},"meta":{"static":true}},{"id":"method-ToArray-1","name":"ToArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an array of objects into into a JSONArray\nInvalid inputs, indeterminate arrays, all get a null value\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"Progress.Lang.Object","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonArray","comment":"JsonArray An array instance"},"meta":{"static":true}},{"id":"method-ToArray-2","name":"ToArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an instance of a collection into a JSONArray\nInvalid inputs, indeterminate arrays, all get a null value\u003c/p\u003e\n","parameters":[{"name":"pCollection","datatype":"OpenEdge.Core.Collections.ICollection","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonArray","comment":"JsonArray An array instance"},"meta":{"static":true}},{"id":"method-ToArray-3","name":"ToArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an instance of a IPrimitiveArrayHolder into a JSONArray\nInvalid inputs, indeterminate arrays, all get a null value\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"Ccs.Common.Support.IPrimitiveArrayHolder","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonArray","comment":"JsonArray An array instance"},"meta":{"static":true}},{"id":"method-ToObject","name":"ToObject","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an instance of a KeyValuePair into a JSON Object\nInvalid inputs, indeterminate arrays, all get an\u003c/p\u003e\n","parameters":[{"name":"pTuple","datatype":"OpenEdge.Core.KeyValuePair","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonObject","comment":"JsonObject A JSON object"},"meta":{"static":true}},{"id":"method-ToObject-1","name":"ToObject","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an kay and value into a JSON Object\u003c/p\u003e\n","parameters":[{"name":"pKey","datatype":"Progress.Lang.Object","mode":"INPUT"},{"name":"pValue","datatype":"Progress.Lang.Object","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonObject","comment":"JsonObject A JSON object"},"meta":{"static":true}},{"id":"method-ToObject-2","name":"ToObject","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an instance of a KeyValuePair into a JSON Object\nInvalid inputs, indeterminate arrays, all get an\u003c/p\u003e\n","parameters":[{"name":"pMap","datatype":"OpenEdge.Core.Collections.IMap","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonObject","comment":"JsonObject A JSON object"},"meta":{"static":true}},{"id":"method-ToObject-3","name":"ToObject","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an instance of a Progress.Lang.Error into a JSON Object\u003c/p\u003e\n\u003cp\u003e{\u003c/p\u003e\n\u003ch3\u003e_retVal:\u003c/h3\u003e\n\u003cp\u003ethe return value, if an AppError\u003c/p\u003e\n\u003ch3\u003e_soapFault:\u003c/h3\u003e\n\u003cp\u003eIf a SoapFaultError, non-empty values are written\n{\u003c/p\u003e\n\u003ch3\u003e_msg:\u003c/h3\u003e\n\u003cp\u003esoapFault:soap-fault-string\u003c/p\u003e\n\u003ch3\u003e_code:\u003c/h3\u003e\n\u003cp\u003esoapFault:soap-fault-code\u003c/p\u003e\n\u003ch3\u003e_subCode:\u003c/h3\u003e\n\u003cp\u003esoapFault:soap-fault-subcode\u003c/p\u003e\n\u003ch3\u003e_actor:\u003c/h3\u003e\n\u003cp\u003esoapFault:soap-fault-actor\u003c/p\u003e\n\u003ch3\u003e_role:\u003c/h3\u003e\n\u003cp\u003esoapFault:soap-fault-role\u003c/p\u003e\n\u003ch3\u003e_misunderstoodHeader:\u003c/h3\u003e\n\u003cp\u003esoap-fault-misunderstood-header\u003c/p\u003e\n\u003ch3\u003e_node:\u003c/h3\u003e\n\u003cp\u003esoapFault:soap-fault-node\n}\u003c/p\u003e\n\u003ch3\u003e_errors:\u003c/h3\u003e\n\u003cp\u003e[\n{ _errorMsg: the error message\u003c/p\u003e\n\u003ch3\u003e_errorNum:\u003c/h3\u003e\n\u003cp\u003ethe error number\n}\n]\u003c/p\u003e\n\u003ch3\u003e_sev:\u003c/h3\u003e\n\u003cp\u003ethe severity of the error\u003c/p\u003e\n\u003ch3\u003e_type:\u003c/h3\u003e\n\u003cp\u003ethe OOABL type of the error, if session:debug-alert\u003c/p\u003e\n\u003ch3\u003e_stack:\u003c/h3\u003e\n\u003cp\u003ethe error call stack, if session:debug-alert\u003c/p\u003e\n\u003ch3\u003e_innerError:\u003c/h3\u003e\n\u003cp\u003eone of the below. if both exist in the error, then stop is used\n{\u003cerror-json\u003e} if the object has a readable InnerError property of type P.L.Error, and a valid value, then call ToObject(error)\n{\u003cstop-json\u003e} if the object has a readable InnerStop property of type P.L.Stop, and a valid value, then call ToObject(stop)\n}\u003c/p\u003e\n","parameters":[{"name":"pError","datatype":"Progress.Lang.Error","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonObject","comment":"JsonObject A JSON object representing the Error"},"meta":{"static":true}},{"id":"method-ToObject-4","name":"ToObject","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts an instance of a Progress.Lang.Stop into a JSON Object\n{\u003c/p\u003e\n\u003ch3\u003e_errors:\u003c/h3\u003e\n\u003cp\u003e[\n{ _errorMsg: the stop type name\u003c/p\u003e\n\u003ch3\u003e_errorNum:\u003c/h3\u003e\n\u003cp\u003enull\u003c/p\u003e\n\u003ch3\u003e_device:\u003c/h3\u003e\n\u003cp\u003e)\u003c/p\u003e\n\u003ch3\u003e_tableName:\u003c/h3\u003e\n\u003cp\u003e) If the stop is a LockConflict\u003c/p\u003e\n\u003ch3\u003e_user:\u003c/h3\u003e\n\u003cp\u003e)\n}\n]\u003c/p\u003e\n\u003ch3\u003e_type:\u003c/h3\u003e\n\u003cp\u003eif session:debug-alert\u003c/p\u003e\n\u003ch3\u003e_stack:\u003c/h3\u003e\n\u003cp\u003eif session:debug-alert\n}\u003c/p\u003e\n","parameters":[{"name":"pStop","datatype":"Progress.Lang.Stop","mode":"INPUT"}],"returns":{"datatype":"Progress.Json.ObjectModel.JsonObject","comment":"JsonObject A JSON object representing the Error"},"meta":{"static":true}},{"id":"method-AddToArray","name":"AddToArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eAdds an instance value into a JSON array\u003c/p\u003e\n","parameters":[{"name":"pIdx","datatype":"INTEGER","mode":"INPUT"},{"name":"pValue","datatype":"Progress.Lang.Object","mode":"INPUT"},{"name":"pJson","datatype":"Progress.Json.ObjectModel.JsonArray","mode":"INPUT"}],"returns":{"comment":""},"meta":{"static":true}},{"id":"method-AddToObject","name":"AddToObject","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eAdds a value into a JSON object for a specific key\u003c/p\u003e\n","parameters":[{"name":"pKey","datatype":"Progress.Lang.Object","mode":"INPUT"},{"name":"pValue","datatype":"Progress.Lang.Object","mode":"INPUT"},{"name":"pJson","datatype":"Progress.Json.ObjectModel.JsonObject","mode":"INPUT"}],"returns":{"comment":""},"meta":{"static":true}},{"id":"method-Merge","name":"Merge","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eMerges (combines) two JSON objects.\u003c/p\u003e\n\u003cp\u003eProperties are copied from the SOURCE into the TARGET.\nProperties are copied from the SOURCE into the TARGET. Property types\nmust match, otherwise an error is thrown.\nIf the property exists in the target, it is overwritten by\nthe source property if the pOverwriteExisting flag is TRUE.\u003c/p\u003e\n","parameters":[{"name":"pTarget","datatype":"Progress.Json.ObjectModel.JsonObject","mode":"INPUT"},{"name":"pSource","datatype":"Progress.Json.ObjectModel.JsonObject","mode":"INPUT"},{"name":"pOverwriteExisting","datatype":"LOGICAL","mode":"INPUT"}],"returns":{"comment":""},"meta":{"static":true}},{"id":"method-ToScalar","name":"ToScalar","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eThis method converts a JSON property to an instance of an IPRimitiveHolder.\u003c/p\u003e\n\u003cp\u003eInput JSON data types:\nNULL -\u0026gt; OE.Core.String(?)\nOBJECT, ARRAY -\u0026gt; OE.Core.String(GetJsonText)\nBOOLEAN -\u0026gt; OE.Core.LogicalValue(\u003cval\u003e)\nNUMBER -\u0026gt; if the value has a \u0027.\u0027, OE.Core.Decimal(\u003cval\u003e), else OE.Core.Integer(\u003cval\u003e)\nSTRING -\u0026gt;\nIf the value looks like YYYY-MM-DD, try to parse and return OE.Core.DateHolder\nIf the value looks like YYYY-MM-DDTHH:MM:SS.SSS, try to parse and return OE.Core.DateTimeHolder\nIf the value looks like YYYY-MM-DDTHH:MM:SS.SSS+HH:MM, try to parse and return OE.Core.DateTimeTzHolder\nIf the value looks like a base64-encoded value (last 2 chars are \u003d\u003d), return as OE.Core.Memptr\nIf the \u0027looks like\u0027 or parsing fail, return OE.Core.String(\u003cval\u003e)\u003c/p\u003e\n\u003cp\u003eIf the property value cannot be converted, an object represeting the unknown value is returned (same as NULL).\u003c/p\u003e\n","parameters":[{"name":"pObject","datatype":"Progress.Json.ObjectModel.JsonObject","mode":"INPUT"},{"name":"pName","datatype":"CHARACTER","mode":"INPUT"}],"returns":{"datatype":"Ccs.Common.Support.IPrimitiveHolder","comment":"IPrimitiveHolder The representative value"},"meta":{"static":true}},{"id":"method-ToScalar-1","name":"ToScalar","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eThis method converts a JSON array element to an instance of an IPrimitiveHolder.\u003c/p\u003e\n\u003cp\u003eIf the inputs are invalid, or the index is not in range, a OE.Core.String object represeting the unknown value is returned.\u003c/p\u003e\n\u003cp\u003eInput JSON data types:\nNULL -\u0026gt; OE.Core.String(?)\nOBJECT, ARRAY -\u0026gt; OE.Core.String(GetJsonText)\nBOOLEAN -\u0026gt; OE.Core.LogicalValue(\u003cval\u003e)\nNUMBER -\u0026gt; if the value has a \u0027.\u0027, OE.Core.Decimal(\u003cval\u003e), else OE.Core.Integer(\u003cval\u003e)\nSTRING -\u0026gt;\nIf the value looks like YYYY-MM-DD, try to parse and return OE.Core.DateHolder\nIf the value looks like YYYY-MM-DDTHH:MM:SS.SSS, try to parse and return OE.Core.DateTimeHolder\nIf the value looks like YYYY-MM-DDTHH:MM:SS.SSS+HH:MM, try to parse and return OE.Core.DateTimeTzHolder\nIf the value looks like a base64-encoded value (last 2 chars are \u003d\u003d), return as OE.Core.Memptr\nIf the \u0027looks like\u0027 or parsing fail, return OE.Core.String(\u003cval\u003e)\u003c/p\u003e\n\u003cp\u003eIf the property value cannot be converted, an object represeting the unknown value is returned (same as NULL).\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"Progress.Json.ObjectModel.JsonArray","mode":"INPUT"},{"name":"pIdx","datatype":"INTEGER","mode":"INPUT"}],"returns":{"datatype":"Ccs.Common.Support.IPrimitiveHolder","comment":"IPrimitiveHolder The representative value"},"meta":{"static":true}},{"id":"method-ToObjectArray","name":"ToObjectArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts a JSON array to an instance of a IObjectArrayHolder\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"Progress.Json.ObjectModel.JsonArray","mode":"INPUT"}],"returns":{"datatype":"OpenEdge.Core.IObjectArrayHolder","comment":"IObjectArrayHolder The array holder. One is always returned."},"meta":{"static":true}},{"id":"method-ToObjectArray-1","name":"ToObjectArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts a JSON array to an instance of a IObjectArrayHolder\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"Progress.Json.ObjectModel.JsonArray","mode":"INPUT"},{"name":"pElementType","datatype":"Progress.Lang.Class","mode":"INPUT"}],"returns":{"datatype":"OpenEdge.Core.IObjectArrayHolder","comment":"IObjectArrayHolder The array holder. One is always returned."},"meta":{"static":true}},{"id":"method-ToPrimitiveArray","name":"ToPrimitiveArray","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eConverts a JSON array to an instance of a PrimitiveArrayHolder\u003c/p\u003e\n\u003cp\u003eThe first non-null element is used to infer the array\u0027s ABL type.\nObjects and Arrays are returned as JSON text.\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"Progress.Json.ObjectModel.JsonArray","mode":"INPUT"}],"returns":{"datatype":"Ccs.Common.Support.IPrimitiveArrayHolder","comment":"IPrimitiveArrayHolder The array holder. One is always returned."},"meta":{"static":true}},{"id":"method-ToEnum","name":"ToEnum","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eThis method converts a JSON array element to an instance of an P.L.Enum.\u003c/p\u003e\n\u003cp\u003eThe element value must be either a string or number.\nIf the inputs are invalid, or the index is not in range, or the value is of the wrong JSON type,\nan unknown value is returned.\u003c/p\u003e\n\u003cp\u003eIf the ToObject() call fails, an error is raised.\u003c/p\u003e\n","parameters":[{"name":"pArray","datatype":"Progress.Json.ObjectModel.JsonArray","mode":"INPUT"},{"name":"pIdx","datatype":"INTEGER","mode":"INPUT"},{"name":"pEnumType","datatype":"Progress.Lang.Class","mode":"INPUT"}],"returns":{"datatype":"Progress.Lang.Enum","comment":"Progress.Lang.Enum The enum"},"meta":{"static":true}},{"id":"method-ToEnum-1","name":"ToEnum","owner":"OpenEdge.Core.Json.JsonConverter","tagname":"method","comment":"\u003cp\u003eThis method converts a JSON property to an instance of an P.L.Enum.\u003c/p\u003e\n\u003cp\u003eThe property value must be either a string or number.\nIf the inputs are invalid, or the property does not exist, or is of the wrong JSON type,\nenum, an unknown value is returned.\u003c/p\u003e\n\u003cp\u003eIf the ToObject() call fails, an error is raised\u003c/p\u003e\n","parameters":[{"name":"pObject","datatype":"Progress.Json.ObjectModel.JsonObject","mode":"INPUT"},{"name":"pName","datatype":"CHARACTER","mode":"INPUT"},{"name":"pEnumType","datatype":"Progress.Lang.Class","mode":"INPUT"}],"returns":{"datatype":"Progress.Lang.Enum","comment":"Progress.Lang.Enum The enum"},"meta":{"static":true}}],"meta":{}});