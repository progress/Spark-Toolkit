Ext.data.JsonP.OpenEdge_BusinessLogic_Filter_FilterParser({"files":[],"uses":["Ccs.BusinessLogic.IGetDataRequest","Ccs.BusinessLogic.IQueryEntry","Ccs.BusinessLogic.IQuerySortEntry","OpenEdge.Core.Assert"],"id":"class-OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"class","name":"OpenEdge.BusinessLogic.Filter.FilterParser","extends":"","author":"pjudge","comment":"\u003ch3\u003eFile:\u003c/h3\u003e\n\u003cp\u003eFilterParser\u003c/p\u003e\n\u003ch3\u003ePurpose:\u003c/h3\u003e\n\u003cp\u003eA parent/abstract filter parse class for creating\nobjects data requests for a CCS Business Entity\u0027s getData()\nand getResultCount() operations\u003c/p\u003e\n\u003ch3\u003eCreated:\u003c/h3\u003e\n\u003cp\u003e2016-12-07\u003c/p\u003e\n","icon":"class","superclasses":["OpenEdge.BusinessLogic.Filter.FilterParser"],"subclasses":["OpenEdge.BusinessLogic.Filter.AblFilterParser","OpenEdge.BusinessLogic.Filter.KendoFilterParser"],"implements":[],"members":[{"id":"constructor-FilterParser1","name":"FilterParser","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"constructor","comment":"\u003cp\u003eDefault constructor.\u003c/p\u003e\n","meta":{}},{"id":"constructor-FilterParser2","name":"FilterParser","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"constructor","comment":"\u003cp\u003eConstructor.\u003c/p\u003e\n","parameters":[{"name":"pTable","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"constructor-FilterParser3","name":"FilterParser","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"constructor","comment":"\u003cp\u003eConstructor.\u003c/p\u003e\n","parameters":[{"name":"pTable","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"property-FilterTable","name":"FilterTable","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"property","datatype":"CHARACTER","comment":"\u003cp\u003eAn ordered set of table names used to create this filter.\nTypically just one, but potentially more\u003c/p\u003e\n\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"method-Parse","name":"Parse","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"method","comment":"\u003cp\u003eReads and processes (parses) a complete data filter.\u003c/p\u003e\n","parameters":[{"name":"pData","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IGetDataRequest","comment":""},"meta":{"abstract":true}},{"id":"method-ParseWhere","name":"ParseWhere","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"method","comment":"\u003cp\u003eParses where/filter phrase and returns an IQueryEntry object for a single table\u003c/p\u003e\n","parameters":[{"name":"pWhere","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQueryEntry","comment":"IQueryEntry The query entry.We return one of an IQueryPredicate (single clause) \n or an IQueryGroup (many clauses)"},"meta":{"abstract":true}},{"id":"method-ParseSortBy","name":"ParseSortBy","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"method","comment":"\u003cp\u003eParses an SORT-BY phrase and returns an array of IQuerySortEntry objects.\u003c/p\u003e\n","parameters":[{"name":"pSortBy","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQuerySortEntry","comment":"IQuerySortEntry[] An array of sort phrases. An indeterminate array is returned if the input phrase is empty"},"meta":{"abstract":true}}],"meta":{"abstract":true}});