Ext.data.JsonP.Spark_Core_Util_EnumMember({"files":[],"uses":["Progress.Lang.Object","Spark.Core.Util.EnumMember"],"id":"class-Spark.Core.Util.EnumMember","tagname":"class","name":"Spark.Core.Util.EnumMember","extends":"","author":"pjudge 21/01/2010","comment":"\u003cp\u003eAbstract class for Enumerations\u0027 members.\nNotes :  We could add a temp-table to manage the EnumMembers\u0027 values etc.\nThat\u0027s not done right now because there\u0027s no pressing need for it.\nValue takes precedence over name, when both are specified.\u003c/p\u003e\n","icon":"class","superclasses":["Spark.Core.Util.EnumMember"],"subclasses":["Spark.Core.Util.CryptoPbeHashAlgorithmEnum","Spark.Core.Util.CryptoEncryptAlgorithmEnum","Spark.Core.Util.ErrorTypeEnum","Spark.Core.Manager.StateLifeCycleEnum"],"implements":[],"members":[{"id":"constructor-EnumMember1","name":"EnumMember","owner":"Spark.Core.Util.EnumMember","tagname":"constructor","comment":"","parameters":[{"name":"piValue","datatype":"INTEGER","mode":""},{"name":"pcName","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"constructor-EnumMember2","name":"EnumMember","owner":"Spark.Core.Util.EnumMember","tagname":"constructor","comment":"","parameters":[{"name":"piValue","datatype":"INTEGER","mode":""}],"meta":{}},{"id":"constructor-EnumMember3","name":"EnumMember","owner":"Spark.Core.Util.EnumMember","tagname":"constructor","comment":"","parameters":[{"name":"pcName","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"property-name","name":"name","owner":"Spark.Core.Util.EnumMember","tagname":"property","datatype":"CHARACTER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-value","name":"value","owner":"Spark.Core.Util.EnumMember","tagname":"property","datatype":"INTEGER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"method-equals","name":"equals","owner":"Spark.Core.Util.EnumMember","tagname":"method","comment":"","parameters":[{"name":"pcName","datatype":"CHARACTER","mode":""}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-equals-1","name":"equals","owner":"Spark.Core.Util.EnumMember","tagname":"method","comment":"","parameters":[{"name":"piValue","datatype":"INTEGER","mode":""}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-equals-2","name":"equals","owner":"Spark.Core.Util.EnumMember","tagname":"method","comment":"","parameters":[{"name":"poEnumMember","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{"override":true}},{"id":"method-toString","name":"toString","owner":"Spark.Core.Util.EnumMember","tagname":"method","comment":"","returns":{"datatype":"CHARACTER","comment":""},"meta":{"override":true}}],"meta":{"abstract":true}});