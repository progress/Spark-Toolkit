Ext.data.JsonP.OpenEdge_BusinessLogic_Filter_KendoFilterParser({"files":[],"uses":["Ccs.BusinessLogic.IGetDataRequest","Ccs.BusinessLogic.IGetDataTableRequest","Ccs.BusinessLogic.IQueryEntry","Ccs.BusinessLogic.IQuerySortEntry","Ccs.BusinessLogic.JoinEnum","Ccs.BusinessLogic.QueryOperatorEnum","Ccs.Common.Support.IPrimitiveHolder","OpenEdge.BusinessLogic.Filter.FilterParser","OpenEdge.BusinessLogic.GetDataRequest","OpenEdge.BusinessLogic.GetDataTableRequest","OpenEdge.BusinessLogic.QueryDefinition","OpenEdge.BusinessLogic.QueryGroup","OpenEdge.BusinessLogic.QueryOperatorHelper","OpenEdge.BusinessLogic.QueryPredicate","OpenEdge.BusinessLogic.QuerySortEntry","OpenEdge.Core.StringConstant","Progress.Json.ObjectModel.JsonArray","Progress.Json.ObjectModel.JsonConstruct","Progress.Json.ObjectModel.JsonDataType","Progress.Json.ObjectModel.JsonObject","Progress.Lang.AppError"],"id":"class-OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"class","name":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","extends":"OpenEdge.BusinessLogic.Filter.FilterParser","author":"pjudge \u0026 dugrau","comment":"\u003ch3\u003eFile:\u003c/h3\u003e\n\u003cp\u003eKendoFilterParser\u003c/p\u003e\n\u003ch3\u003eCreated:\u003c/h3\u003e\n\u003cp\u003eWed Dec 07 14:11:10 EST 2016\u003c/p\u003e\n","icon":"class","superclasses":["OpenEdge.BusinessLogic.Filter.FilterParser","OpenEdge.BusinessLogic.Filter.KendoFilterParser"],"subclasses":[],"implements":[],"members":[{"id":"constructor-KendoFilterParser1","name":"KendoFilterParser","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"constructor","comment":"\u003cp\u003eDefault constructor\u003c/p\u003e\n","meta":{}},{"id":"constructor-KendoFilterParser2","name":"KendoFilterParser","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"constructor","comment":"\u003cp\u003eConstructor.\u003c/p\u003e\n","parameters":[{"name":"pTable","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"constructor-KendoFilterParser3","name":"KendoFilterParser","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"constructor","comment":"\u003cp\u003eConstructor.\u003c/p\u003e\n","parameters":[{"name":"pTable","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"method-ParsePredicate","name":"ParsePredicate","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"method","comment":"","parameters":[{"name":"pJoin","datatype":"Ccs.BusinessLogic.JoinEnum","mode":""},{"name":"pFilter","datatype":"Progress.Json.ObjectModel.JsonObject","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQueryEntry","comment":""},"meta":{}},{"id":"method-ParseWhere","name":"ParseWhere","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"method","comment":"","parameters":[{"name":"pGroup","datatype":"OpenEdge.BusinessLogic.QueryGroup","mode":""},{"name":"pFilter","datatype":"Progress.Json.ObjectModel.JsonObject","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQueryEntry","comment":""},"meta":{}},{"id":"method-ParseWhere-1","name":"ParseWhere","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"method","comment":"\u003cp\u003eParses where/filter phrase and returns an IQueryEntry object for a single table\u003c/p\u003e\n\u003ch3\u003ehttp:\u003c/h3\u003e\n\u003cp\u003e//docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-filter\u003c/p\u003e\n","parameters":[{"name":"pWhere","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQueryEntry","comment":"IQueryEntry The query entry. We return one of an IQueryPredicate (single clause)\n or an IQueryGroup (many clauses)"},"meta":{"override":true}},{"id":"method-ParseSortBy","name":"ParseSortBy","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"method","comment":"\u003cp\u003eParses an SORT-BY phrase and returns an array of IQuerySortEntry objects.\u003c/p\u003e\n\u003ch3\u003ehttp:\u003c/h3\u003e\n\u003cp\u003e//docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-sort\u003c/p\u003e\n","parameters":[{"name":"pSortBy","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQuerySortEntry","comment":"IQuerySortEntry[] An array of sort phrases. An indeterminate array is returned if the input phrase is empty"},"meta":{"override":true}},{"id":"method-Parse","name":"Parse","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"method","comment":"\u003cp\u003eReads and processes (parses) the filter.\u003c/p\u003e\n","parameters":[{"name":"pData","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IGetDataRequest","comment":""},"meta":{"override":true}},{"id":"method-ParseTableRequest","name":"ParseTableRequest","owner":"OpenEdge.BusinessLogic.Filter.KendoFilterParser","tagname":"method","comment":"\u003cp\u003eReads a single table\u0027s request.\u003c/p\u003e\n\u003cp\u003eThis method knows which properties in the input JSON are for the where clause, for the sort-by etc\u003c/p\u003e\n","parameters":[{"name":"pTable","datatype":"CHARACTER","mode":""},{"name":"pData","datatype":"Progress.Json.ObjectModel.JsonObject","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IGetDataTableRequest","comment":"IGetDataTableRequest A single table Get Request"},"meta":{}},{"id":"constructor-OpenEdge_BusinessLogic_Filter_FilterParser_FilterParser1","name":"FilterParser","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"constructor","comment":"\u003cp\u003eDefault constructor.\u003c/p\u003e\n","meta":{}},{"id":"constructor-OpenEdge_BusinessLogic_Filter_FilterParser_FilterParser2","name":"FilterParser","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"constructor","comment":"\u003cp\u003eConstructor.\u003c/p\u003e\n","parameters":[{"name":"pTable","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"constructor-OpenEdge_BusinessLogic_Filter_FilterParser_FilterParser3","name":"FilterParser","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"constructor","comment":"\u003cp\u003eConstructor.\u003c/p\u003e\n","parameters":[{"name":"pTable","datatype":"CHARACTER","mode":""}],"meta":{}},{"id":"property-OpenEdge_BusinessLogic_Filter_FilterParser_FilterTable","name":"FilterTable","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"property","datatype":"CHARACTER","comment":"\u003cp\u003eAn ordered set of table names used to create this filter.\nTypically just one, but potentially more\u003c/p\u003e\n\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"method-OpenEdge_BusinessLogic_Filter_FilterParser_Parse","name":"Parse","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"method","comment":"\u003cp\u003eReads and processes (parses) a complete data filter.\u003c/p\u003e\n","parameters":[{"name":"pData","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IGetDataRequest","comment":""},"meta":{"abstract":true}},{"id":"method-OpenEdge_BusinessLogic_Filter_FilterParser_ParseWhere","name":"ParseWhere","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"method","comment":"\u003cp\u003eParses where/filter phrase and returns an IQueryEntry object for a single table\u003c/p\u003e\n","parameters":[{"name":"pWhere","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQueryEntry","comment":"IQueryEntry The query entry.We return one of an IQueryPredicate (single clause) \n or an IQueryGroup (many clauses)"},"meta":{"abstract":true}},{"id":"method-OpenEdge_BusinessLogic_Filter_FilterParser_ParseSortBy","name":"ParseSortBy","owner":"OpenEdge.BusinessLogic.Filter.FilterParser","tagname":"method","comment":"\u003cp\u003eParses an SORT-BY phrase and returns an array of IQuerySortEntry objects.\u003c/p\u003e\n","parameters":[{"name":"pSortBy","datatype":"Progress.Lang.Object","mode":""}],"returns":{"datatype":"Ccs.BusinessLogic.IQuerySortEntry","comment":"IQuerySortEntry[] An array of sort phrases. An indeterminate array is returned if the input phrase is empty"},"meta":{"abstract":true}}],"meta":{}});