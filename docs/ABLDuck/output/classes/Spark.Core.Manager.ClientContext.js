Ext.data.JsonP.Spark_Core_Manager_ClientContext({"files":[],"uses":["Spark.Core.Manager.ILoggingManager","Spark.Core.Manager.IStateManager","Spark.Core.Util.ApplicationError","Spark.Core.Util.FormatTools","Spark.Core.Util.GenTools","Spark.Core.Util.CryptoTools"],"id":"class-Spark.Core.Manager.ClientContext","tagname":"class","name":"Spark.Core.Manager.ClientContext","extends":"","author":"","comment":"\u003cp\u003eThe Client Context - holds all info about the user/client session\u003c/p\u003e\n\u003cp\u003eThis object provides easy access to the session Client-Principal and its attributes\nas well as other application session properties\u003c/p\u003e\n\u003cp\u003eUser Context data is basically any information that you want to persist between service requests.\nTypically we will hold the traditional global shared variables like userid, branch, department, etc.\u003c/p\u003e\n\u003cp\u003eThe user context data is retrieved from the State Manager and re-established in the ClientContext object and\nthen saved back to the State Manager at the end of the request.\u003c/p\u003e\n\u003cp\u003eSo we need to ensure that we only store context data that is absolutely needed, not because it is easier.\u003c/p\u003e\n\u003cp\u003eTo find the current user ID:\n\u003ccode\u003ecast(Ccs.Common.Application:SessionManager:CurrentClientContext, Spark.Core.Manager.IClientContext):userId\u003c/code\u003e\n\u003cbr\u003eTo find current user Domain:\n\u003ccode\u003ecast(Ccs.Common.Application:SessionManager:CurrentClientContext, Spark.Core.Manager.IClientContext):userDomain\u003c/code\u003e\n\u003cbr\u003eTo create and save a user context property:\n\u003ccode\u003ecast(Ccs.Common.Application:SessionManager:CurrentClientContext, Spark.Core.Manager.IClientContext):setUserProperty(\u0026quot;myProp\u0026quot;,cMyPropValue).\u003c/code\u003e\n\u003cbr\u003eTo retrieve a user context property:\n\u003ccode\u003ecast(Ccs.Common.Application:SessionManager:CurrentClientContext, Spark.Core.Manager.IClientContext):getUserPropertyAsChar(\u0026quot;myProp\u0026quot;)\u003c/code\u003e\n\u003cbr\u003eTo retrieve an extent (Array) user context property:\n\u003ccode\u003ecast(Ccs.Common.Application:SessionManager:CurrentClientContext, Spark.Core.Manager.IClientContext):getUserArrayPropertyAsChar(\u0026quot;myExtProps\u0026quot;)\u003c/code\u003e\n\u003cbr\u003eTo retrieve an array of user context properties:\n\u003ccode\u003ecast(Ccs.Common.Application:SessionManager:CurrentClientContext, Spark.Core.Manager.IClientContext):getUserPropertyArray(cExtPropNames)\u003c/code\u003e\u003c/p\u003e\n","icon":"class","superclasses":["Spark.Core.Manager.ClientContext"],"subclasses":[],"implements":["Spark.Core.Manager.IClientContext"],"members":[{"id":"constructor-ClientContext1","name":"ClientContext","owner":"Spark.Core.Manager.ClientContext","tagname":"constructor","comment":"","meta":{}},{"id":"destructor-ClientContext","name":"ClientContext","owner":"Spark.Core.Manager.ClientContext","tagname":"destructor","comment":"","meta":{}},{"id":"property-oStateManager","name":"oStateManager","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"Spark.Core.Manager.IStateManager","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET - PUBLIC SET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-clientPrincipal","name":"clientPrincipal","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"HANDLE","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-contextID","name":"contextID","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"CHARACTER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-userDomain","name":"userDomain","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"CHARACTER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-userID","name":"userID","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"CHARACTER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-userExtra","name":"userExtra","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"CHARACTER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-loginExpiration","name":"loginExpiration","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"DATETIME-TZ","comment":"\u003cp\u003eThe time stamp of when the client-principal object will expire.\u003c/p\u003e\n\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-activityPassword","name":"activityPassword","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"CHARACTER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"property-stateClassID","name":"stateClassID","owner":"Spark.Core.Manager.ClientContext","tagname":"property","datatype":"CHARACTER","comment":"\u003ch3\u003eModifier:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003ePUBLIC GET\u003c/code\u003e\u003c/p\u003e\n","meta":{}},{"id":"method-initializeContext","name":"initializeContext","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new user context from an existing Client Principal\u003c/p\u003e\n","parameters":[{"name":"phClientPrincipal","datatype":"HANDLE","mode":"","comment":"The handle to the existing Client Principal"}],"returns":{"comment":""},"meta":{}},{"id":"method-initializeContext-1","name":"initializeContext","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a user context from an existing contexID value\nThis constructor does NOT assign the clientPrincipal\u003c/p\u003e\n","parameters":[{"name":"pcContexID","datatype":"CHARACTER","mode":"","comment":"The contextID"}],"returns":{"comment":""},"meta":{}},{"id":"method-initializeContext-2","name":"initializeContext","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"","returns":{"comment":""},"meta":{}},{"id":"method-initializeUserProperties","name":"initializeUserProperties","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eThis method is called by the session manager after the Client Principal has been asserted\nThe purpose is to initialize any application User Properites e.g. Company, Branch etc.\u003c/p\u003e\n","returns":{"comment":""},"meta":{}},{"id":"method-initializeUserProperty","name":"initializeUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eThis method is called to initialize a single property value if it has not previously been done\nThis can be used to lazily instantiate a user property once the session environment has been\ninitialized and only when the property is first required\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":""}],"returns":{"comment":""},"meta":{}},{"id":"method-getSSOToken","name":"getSSOToken","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet the Signon Token that can be passed to the Spring Security Realm for authentication\u003c/p\u003e\n","returns":{"datatype":"CHARACTER","comment":""},"meta":{}},{"id":"method-getSSORawToken","name":"getSSORawToken","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet the Raw Signon Token\u003c/p\u003e\n","returns":{"datatype":"CHARACTER","comment":""},"meta":{}},{"id":"method-prepareForSerializeContext","name":"prepareForSerializeContext","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eWrite the CPO info into the user properties before serialization of the ClientContext object\u003c/p\u003e\n","returns":{"comment":""},"meta":{}},{"id":"method-serializeContext","name":"serializeContext","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eThe serialized string returned from this method is used by the Constructor to recreate this object\u003c/p\u003e\n","returns":{"datatype":"LONGCHAR","comment":"A Serialized string representing this ClientContext Object"},"meta":{}},{"id":"method-saveContext","name":"saveContext","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eSave the curernt changes to the user properties back to the state manager by merging changes in the properties in this session\nwith any changes in from other concurrent sessions\u003c/p\u003e\n","returns":{"comment":""},"meta":{}},{"id":"method-setTrackingChangesOnUserProperties","name":"setTrackingChangesOnUserProperties","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"","returns":{"comment":""},"meta":{}},{"id":"method-getUserPropertyArray","name":"getUserPropertyArray","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet an array of User Properties\u003c/p\u003e\n","parameters":[{"name":"pcProperties","datatype":"CHARACTER","mode":"","comment":"An array of properties to be returned"}],"returns":{"datatype":"CHARACTER","comment":"An Array of property values"},"meta":{}},{"id":"method-getUserProperties","name":"getUserProperties","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet an array of User Property names\u003c/p\u003e\n","returns":{"datatype":"CHARACTER","comment":"An Array of property names"},"meta":{}},{"id":"method-getUserPropertyArray-1","name":"getUserPropertyArray","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet an array of all User Properties Names and Values\u003c/p\u003e\n","parameters":[{"name":"pcPropNames","datatype":"CHARACTER","mode":"","comment":"An array of property names to be returned"},{"name":"pcPropValues","datatype":"CHARACTER","mode":"","comment":"An array of property values to be returned"}],"returns":{"comment":""},"meta":{}},{"id":"method-getUserProperty","name":"getUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"CHARACTER","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsLongchar","name":"getUserPropertyAsLongchar","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"LONGCHAR","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsChar","name":"getUserPropertyAsChar","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"CHARACTER","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsInt","name":"getUserPropertyAsInt","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"INTEGER","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsInt64","name":"getUserPropertyAsInt64","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"INT64","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsDec","name":"getUserPropertyAsDec","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"DECIMAL","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsLog","name":"getUserPropertyAsLog","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"LOGICAL","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsDate","name":"getUserPropertyAsDate","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"DATE","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsDatetime","name":"getUserPropertyAsDatetime","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"DATETIME","comment":"The requested property value"},"meta":{}},{"id":"method-getUserPropertyAsDatetimeTz","name":"getUserPropertyAsDatetimeTz","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet a User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"DATETIME-TZ","comment":"The requested property value"},"meta":{}},{"id":"method-getUserArrayPropertyAsChar","name":"getUserArrayPropertyAsChar","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet an Array User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"CHARACTER","comment":"The requested property value"},"meta":{}},{"id":"method-getUserArrayPropertyAsDec","name":"getUserArrayPropertyAsDec","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet an Array User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"DECIMAL","comment":"The requested property value"},"meta":{}},{"id":"method-getUserArrayPropertyAsInt","name":"getUserArrayPropertyAsInt","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eGet an Array User Property value\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"INTEGER","comment":"The requested property value"},"meta":{}},{"id":"method-hasUserProperty","name":"hasUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eReturns if User Property exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to return"}],"returns":{"datatype":"LOGICAL","comment":"If the property exists"},"meta":{}},{"id":"method-setUserProperty","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"plcValue","datatype":"LONGCHAR","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-1","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"pcValue","datatype":"CHARACTER","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-2","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"piValue","datatype":"INTEGER","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-3","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"piValue","datatype":"INT64","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-4","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"pdValue","datatype":"DECIMAL","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-5","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"plValue","datatype":"LOGICAL","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-6","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"ptValue","datatype":"DATE","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-7","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"ptValue","datatype":"DATETIME","mode":"","comment":"The value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-8","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"pcValue","datatype":"DATETIME-TZ","mode":""}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-9","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Extent Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"pcValue","datatype":"CHARACTER","mode":"","comment":"The Extent value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-10","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Extent Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"pdValue","datatype":"DECIMAL","mode":"","comment":"The Extent value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-setUserProperty-11","name":"setUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eCreate a new User Extent Property or update the value if it already exists\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":"","comment":"The name of the property to be saved"},{"name":"piValue","datatype":"INTEGER","mode":"","comment":"The Extent value of the property to be saved"}],"returns":{"comment":""},"meta":{}},{"id":"method-removeUserProperty","name":"removeUserProperty","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eRemove/Delete the user property\u003c/p\u003e\n","parameters":[{"name":"pcProperty","datatype":"CHARACTER","mode":""}],"returns":{"comment":""},"meta":{}},{"id":"method-invalidateContext","name":"invalidateContext","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"\u003cp\u003eThis method will invalidate the client principal object so that is can not be used again\u003c/p\u003e\n","returns":{"comment":""},"meta":{}},{"id":"method-setActivityPassword","name":"setActivityPassword","owner":"Spark.Core.Manager.ClientContext","tagname":"method","comment":"","parameters":[{"name":"pcActivityPassword","datatype":"CHARACTER","mode":""}],"returns":{"comment":""},"meta":{}},{"id":"temptable-ttUserSessionProp","name":"ttUserSessionProp","owner":"Spark.Core.Manager.ClientContext","tagname":"temptable","definition":"DEFINE TEMP-TABLE ttUserSessionProp BEFORE-TABLE biUserSessionProp \u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  FIELD PropName AS CHARACTER\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  FIELD PropValue AS CHARACTER\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  FIELD PropClob AS clob\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  INDEX ix1 PRIMARY UNIQUE PropName\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","comment":"","meta":{}},{"id":"temptable-dbUserSessionProp","name":"dbUserSessionProp","owner":"Spark.Core.Manager.ClientContext","tagname":"temptable","definition":"DEFINE TEMP-TABLE dbUserSessionProp LIKE ttUserSessionProp SERIALIZE-NAME \u0027ttUserSessionProp\u0027 \u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","comment":"","meta":{}},{"id":"dataset-dsTtUserSessionProp","name":"dsTtUserSessionProp","owner":"Spark.Core.Manager.ClientContext","tagname":"dataset","definition":"DEFINE DATASET dsTtUserSessionProp FOR ttUserSessionProp\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","comment":"","meta":{}},{"id":"dataset-dsDbUserSessionProp","name":"dsDbUserSessionProp","owner":"Spark.Core.Manager.ClientContext","tagname":"dataset","definition":"DEFINE DATASET dsDbUserSessionProp FOR dbUserSessionProp\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","comment":"","meta":{}}],"meta":{}});