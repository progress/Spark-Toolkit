Ext.data.JsonP.Spark_Core_Security_IAuthHandler({"files":[],"uses":["Progress.Lang.*"],"id":"class-Spark.Core.Security.IAuthHandler","tagname":"class","name":"Spark.Core.Security.IAuthHandler","extends":"","author":"Dustin Grau (dugrau@progress.com)","comment":"\u003ch3\u003eFile:\u003c/h3\u003e\n\u003cp\u003eIAuthHandler\u003c/p\u003e\n\u003ch3\u003ePurpose:\u003c/h3\u003e\n\u003cp\u003eProvides specific methods for checking user credentials\u003c/p\u003e\n\u003ch3\u003eDescription:\u003c/h3\u003e\n\u003cp\u003eBasic helper methods for authentication by IHybridRealm\u003c/p\u003e\n\u003ch3\u003eCreated:\u003c/h3\u003e\n\u003cp\u003eThu Feb 26 12:54:28 EST 2015\u003c/p\u003e\n","icon":"interface","superclasses":["Spark.Core.Security.IAuthHandler"],"subclasses":[],"implementers":["Spark.Core.Security.OEUserRealm"],"members":[{"id":"method-getUserID","name":"getUserID","owner":"Spark.Core.Security.IAuthHandler","tagname":"method","comment":"\u003cp\u003eThe following protected variables are available for use:\u003c/p\u003e\n\u003cp\u003edefine protected variable oConfig   as ConfigMessage no-undo.\ndefine protected variable useDebugs as logical       no-undo initial false.\u003c/p\u003e\n\u003cp\u003eThe following are protected methods that can be overriden, but cannot be included as interface definitions:\u003c/p\u003e\n\u003cp\u003emethod protected logical checkPasswordHash ( input pcPassword as character, input pcHashPass as character ).\nmethod protected logical checkPasswordHash ( input piUserID   as integer, input pcPassword as character, input pcHashPass as character ).\nmethod protected character getPassword ( input piUserID as integer ).\nmethod protected void postAuthenticate ( input piUserID as integer, input lRetVal  as logical ).\u003c/p\u003e\n","parameters":[{"name":"pcUsername","datatype":"CHARACTER","mode":"INPUT"},{"name":"pcDomainName","datatype":"CHARACTER","mode":"INPUT"}],"returns":{"datatype":"INTEGER","comment":""},"meta":{}},{"id":"method-isActive","name":"isActive","owner":"Spark.Core.Security.IAuthHandler","tagname":"method","comment":"","parameters":[{"name":"piUserID","datatype":"INTEGER","mode":"INPUT"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-isExpired","name":"isExpired","owner":"Spark.Core.Security.IAuthHandler","tagname":"method","comment":"","parameters":[{"name":"piUserID","datatype":"INTEGER","mode":"INPUT"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-isLocked","name":"isLocked","owner":"Spark.Core.Security.IAuthHandler","tagname":"method","comment":"","parameters":[{"name":"piUserID","datatype":"INTEGER","mode":"INPUT"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-getUserRoles","name":"getUserRoles","owner":"Spark.Core.Security.IAuthHandler","tagname":"method","comment":"","parameters":[{"name":"piUserID","datatype":"INTEGER","mode":"INPUT"}],"returns":{"datatype":"CHARACTER","comment":""},"meta":{}}],"meta":{}});