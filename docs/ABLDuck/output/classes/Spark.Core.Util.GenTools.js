Ext.data.JsonP.Spark_Core_Util_GenTools({"files":[],"uses":["Spark.Core.Util.ApplicationError"],"id":"class-Spark.Core.Util.GenTools","tagname":"class","name":"Spark.Core.Util.GenTools","extends":"","author":"","comment":"\u003cp\u003eA static class with general helper methods\u003c/p\u003e\n","icon":"class","superclasses":["Spark.Core.Util.GenTools"],"subclasses":[],"implements":[],"members":[{"id":"method-getAblError","name":"getAblError","owner":"Spark.Core.Util.GenTools","tagname":"method","comment":"\u003cp\u003eReturns a concatenated error message associated with a specified error currently recorded by error-status system handle.\u003c/p\u003e\n","returns":{"datatype":"CHARACTER","comment":""},"meta":{"static":true}},{"id":"method-getLastAblError","name":"getLastAblError","owner":"Spark.Core.Util.GenTools","tagname":"method","comment":"\u003cp\u003eReturn the last ABL runtime error message and number\nSee: http://knowledgebase.progress.com/articles/Article/P82729\nThe _MSG function returns the error/warning message specified by its integer parameter\nfrom the current Progress session\u0027s error/warning message stack\u003c/p\u003e\n","returns":{"datatype":"CHARACTER","comment":""},"meta":{"static":true}},{"id":"method-getDateTime","name":"getDateTime","owner":"Spark.Core.Util.GenTools","tagname":"method","comment":"\u003cp\u003eConvert separate date and time values into a single datetime value\u003c/p\u003e\n","parameters":[{"name":"pdDate","datatype":"DATE","mode":"INPUT","comment":"Standard date in ABL (eg. TODAY)"},{"name":"piTime","datatype":"INTEGER","mode":"INPUT","comment":"Time since midnight, in seconds (eg. TIME)"}],"returns":{"datatype":"DATETIME","comment":""},"meta":{"static":true}},{"id":"method-getLocalTimeZoneOffset","name":"getLocalTimeZoneOffset","owner":"Spark.Core.Util.GenTools","tagname":"method","comment":"\u003cp\u003eGet the timezone offset for a region including the daylight savings offset\u003c/p\u003e\n","parameters":[{"name":"pcTZ","datatype":"CHARACTER","mode":"INPUT","comment":"Timezone region e.g. Australia/Sydney"}],"returns":{"datatype":"INTEGER","comment":""},"meta":{"static":true}},{"id":"method-getLocalTimeZoneOffset-1","name":"getLocalTimeZoneOffset","owner":"Spark.Core.Util.GenTools","tagname":"method","comment":"\u003cp\u003eGet the timezone offset for a region including the daylight savings offset\u003c/p\u003e\n","parameters":[{"name":"pcTZ","datatype":"CHARACTER","mode":"INPUT","comment":"Timezone region e.g. Australia/Sydney"},{"name":"ptAsAtDatetime","datatype":"DATETIME-TZ","mode":"INPUT","comment":"Datetime to return the offset for"}],"returns":{"datatype":"INTEGER","comment":""},"meta":{"static":true}},{"id":"method-encodeURL","name":"encodeURL","owner":"Spark.Core.Util.GenTools","tagname":"method","comment":"\u003cp\u003eEncodes unsafe characters in a URL as per RFC 1738 section 2.2.\n\u003ca href\u003d\"URL:http://ds.internic.net/rfc/rfc1738.txt\"\u003eURL:http://ds.internic.net/rfc/rfc1738.txt\u003c/a\u003e, 2.2\nThe following code is derived from the URL-ENCODE function in src/web/method/cgi-utils.\u003c/p\u003e\n","parameters":[{"name":"pcValue","datatype":"CHARACTER","mode":"INPUT","comment":"The value to encode"}],"returns":{"datatype":"CHARACTER","comment":"Encoded string (unkown value is returned as blank)"},"meta":{"static":true}},{"id":"method-encodeURL-1","name":"encodeURL","owner":"Spark.Core.Util.GenTools","tagname":"method","comment":"\u003cp\u003eEncodes unsafe characters in a URL as per RFC 1738 section 2.2.\n\u003ca href\u003d\"URL:http://ds.internic.net/rfc/rfc1738.txt\"\u003eURL:http://ds.internic.net/rfc/rfc1738.txt\u003c/a\u003e, 2.2\nThe following code is derived from the URL-ENCODE function in src/web/method/cgi-utils.\u003c/p\u003e\n","parameters":[{"name":"pcValue","datatype":"CHARACTER","mode":"INPUT","comment":"The value to encode"},{"name":"pcEncodeType","datatype":"CHARACTER","mode":"INPUT","comment":"The encoding option where \"query\", \"cookie\", \"default\" or any specified string of characters are valid."}],"returns":{"datatype":"CHARACTER","comment":"Encoded string (unkown value is returned as blank)"},"meta":{"static":true}}],"meta":{}});