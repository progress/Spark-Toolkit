To prevent unknown requests from reaching the Hybrid Realm service provider, we must utilize the realmTokenFile
option in the OERealm configuration file. This will provide an identity as context across the AppServer request,
whether internally for a PAS instance or to an external server, marking it as a request from a known source. On
the receiving side it is the duty of the Hybrid Realm class to validate the request and confirm the passed token.

NOTE: It is by design that this CP token does NOT use the same passphrase as any other domain in your application!
This is only meant to secure the requests for authentication, and not for general access to your application data.

To generate a serialized Client Principal file that will be passed from the REST Adapter to the Hybrid Realm service:

1. Use the genspacp utility from the $DLC/bin directory as follows:

   genspacp -password sp4rkR3alm -user sparkRest -file SparkRealm.cp

   genspacp 1.1
   Generated sealed Client Principal...
     User: sparkRest@OESPA
     Id: FCEc+NW3QIW5RIpp1TuMgQ
     Role: SPAClient
     File: SparkRealm.cp
     State: SSO from external authentication system
     Seal is valid

2. Copy the original, clear-text password used above and update the password in the SparkRealm.json file.
Reminder: Be sure to state the correct domain name (default "OESPA") as well within the JSON config file.

   Security Note: Ideally this value should be encrypted in such a way that it can be decrypted from within the OERealm service. The encrypted value would be stored in the JSON file, while the OERealm service would decrypt it before applying via VALIDATE-SEAL("<password>") against the incoming request's CP token.

3. Copy the role as generated above (eg. "SPAClient") and update the role in the "SparkRealm.json" file.

4. Copy the "SparkRealm.cp" file to somewhere the REST application can read it from: e.g. the {$CATALINA_BASE}/common/lib directory.

5. Copy the "SparkRealm.json" file to {$CATALINA_BASE}/conf/spark (or your SPARK_CONF directory).

6. Specify "SparkRealm.cp" file as the "realmTokenFile" attribute value in the oeablSecurity-*-oerealm.xml file.
Note: This is located in the OERealmUserDetails bean.

7. Update the password in the ABLDomainRegistry.csv replacing any existing existing value following the "spark" domain (default: "spark01").

8. Run the following command to generate the binary keystore file:

   DLC/bin/gendomreg ABLDomainRegistry.csv ABLDomainRegistry.keystore

9. Copy the updated keystore file to the CATALINA_BASE/conf directory.

10. Restart the PAS instance to ensure that the configuration change is picked up.


Alternatively, the OESPA domain could be defined in the trusted domain registry in a database connected to the OERealm service provider, set with the same domain access code. In order to obtain validation of the CP token you would use VALIDATE-SEAL() without a parameter. This approach will use the domain access code associated with the OESPA domain (in the trusted domain registry of the database) to validate the incoming CP token as generated by the genspacp utility.

See also, https://docs.progress.com/bundle/abl-reference/page/VALIDATE-SEAL-method.html